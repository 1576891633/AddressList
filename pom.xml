<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.lensyn</groupId>
	<artifactId>address-list</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>address-list</name>
	<description>address list project</description>

	<parent>
		<groupId>com.lensyn</groupId>
		<artifactId>lensyn-common-parent</artifactId>
		<version>1.0.1-SNAPSHOT</version>
	</parent>

    <properties>
        <!--swagger-->
        <springfox-swagger2.version>2.7.0</springfox-swagger2.version>
        <restdocs.version>1.2.1.RELEASE</restdocs.version>
        <!--maven plugin-->
        <maven-resources.version>3.0.2</maven-resources.version>
        <maven-compiler.version>3.6.2</maven-compiler.version>
        <!-- swagger2markup and asciidoctor start -->
        <swagger2markup.version>1.3.1</swagger2markup.version>
        <swagger2markup.extension.version>1.3.1</swagger2markup.extension.version>
        <swagger2markup.plugin.version>1.3.3</swagger2markup.plugin.version>
        <asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>
        <swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir>
        <swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
        <generated.asciidoc.directory>${project.build.directory}/asciidoc/generated</generated.asciidoc.directory>
        <asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
        <swagger.input>${swagger.output.dir}/swagger.json</swagger.input>
        <asciidoctor.version>1.5.5</asciidoctor.version>
        <asciidoctor.maven.plugin.version>1.5.5</asciidoctor.maven.plugin.version>
        <asciidoctorj.version>1.5.6</asciidoctorj.version>
        <jruby.version>1.7.26</jruby.version>
        <!-- swagger2markup and asciidoctor end -->
    </properties>

	<dependencies>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20090211</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.14</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zookeeper-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- restdocs依赖配置 -->
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>

		<!--单元测试-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 通用异常处理-->
		<dependency>
			<groupId>com.lensyn</groupId>
			<artifactId>lensyn-common-exception</artifactId>
		</dependency>

		<!--mybatis-->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
		</dependency>

		<!--mysql-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!--hikari-->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>

		<!-- spring-amqp -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>

		<!-- gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<!--socketIO-->
		<dependency>
			<groupId>com.corundumstudio.socketio</groupId>
			<artifactId>netty-socketio</artifactId>
			<version>1.7.7</version>
		</dependency>

		<!-- 能信权限jar包 -->
		<!--工具包-->
		<dependency>
			<groupId>com.lensyn</groupId>
			<artifactId>lensyn-common-utils</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>spring-boot-starter-jdbc</artifactId>
					<groupId>org.springframework.boot</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-boot-starter-jdbc</artifactId>
					<groupId>org.springframework.boot</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--对象包-->
		<dependency>
			<groupId>com.lensyn</groupId>
			<artifactId>usercenter-common-components</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>lensyn-common-utils</artifactId>
					<groupId>com.lensyn</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--客户端包-->
		<dependency>
			<groupId>com.lensyn</groupId>
			<artifactId>usercenter-security-client</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>lensyn-common-utils</artifactId>
					<groupId>com.lensyn</groupId>
				</exclusion>
				<exclusion>
					<artifactId>mysql-connector-java</artifactId>
					<groupId>mysql</groupId>
				</exclusion>
				<exclusion>
					<artifactId>HikariCP</artifactId>
					<groupId>com.zaxxer</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-boot-starter-freemarker</artifactId>
					<groupId>org.springframework.boot</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- 统一日志客户端 -->
		<!--<dependency>-->
		<!--<groupId>com.lensyn</groupId>-->
		<!--<artifactId>unifylog-client-starter</artifactId>-->
		<!--<version>1.0.0-SNAPSHOT</version>-->
		<!--</dependency>-->

		<!--swagger-->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-swagger2.version}</version>
		</dependency>

		<dependency>
			<groupId>com.lensyn</groupId>
			<artifactId>portal-message-client</artifactId>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<profile.env>dev</profile.env>
				<!--定义测试跳过swagger,asciidoc等插件-->
				<skipTests>false</skipTests>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<profile.env>prod</profile.env>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<profile.env>test</profile.env>
			</properties>
		</profile>
	</profiles>

	<pluginRepositories>
		<pluginRepository>
			<id>jcenter-snapshots</id>
			<name>jcenter</name>
			<url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
		</pluginRepository>
		<pluginRepository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>jcenter-releases</id>
			<name>jcenter</name>
			<url>http://jcenter.bintray.com</url>
		</pluginRepository>
	</pluginRepositories>
	】，
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler.version}</version>
				<configuration>
					<compilerVersion>${java.version}</compilerVersion>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
					<!-- prevents endPosTable exception for maven compile -->
					<useIncrementalCompilation>false</useIncrementalCompilation>
				</configuration>
			</plugin>

			<!--单元测试-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>${skipTests}</skip>
					<systemPropertyVariables>
						<io.springfox.staticdocs.outputDir>${swagger.output.dir}</io.springfox.staticdocs.outputDir>
						<io.springfox.staticdocs.snippetsOutputDir>${swagger.snippetOutput.dir}</io.springfox.staticdocs.snippetsOutputDir>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<!-- First, use the swagger2markup plugin to generate asciidoc -->
			<plugin>
				<groupId>io.github.swagger2markup</groupId>
				<artifactId>swagger2markup-maven-plugin</artifactId>
				<version>${swagger2markup.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>io.github.swagger2markup</groupId>
						<artifactId>swagger2markup-import-files-ext</artifactId>
						<version>${swagger2markup.extension.version}</version>
					</dependency>
					<dependency>
						<groupId>io.github.swagger2markup</groupId>
						<artifactId>swagger2markup</artifactId>
						<version>${swagger2markup.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<skip>${skipTests}</skip>
					<swaggerInput>${swagger.input}</swaggerInput>
					<outputDir>${generated.asciidoc.directory}</outputDir>
					<config>
						<!--设置输出文件的语言：ASCIIDOC-->
						<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
						<!--设置目录的展现方式-->
						<swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>
					</config>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>convertSwagger2markup</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Run the generated asciidoc through Asciidoctor to generate HTML5 documentation types -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctor.maven.plugin.version}</version>
				<configuration>
					<skip>${skipTests}</skip>
					<sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
					<sourceDocumentName>index.adoc</sourceDocumentName>
					<attributes>
						<doctype>book</doctype>
						<toc>left</toc>
						<toclevels>3</toclevels>
						<numbered></numbered>
						<hardbreaks></hardbreaks>
						<sectlinks></sectlinks>
						<sectanchors></sectanchors>
						<generated>${generated.asciidoc.directory}</generated>
					</attributes>
				</configuration>
				<executions>
					<execution>
						<id>output-html</id>
						<phase>test</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html5</backend>
							<outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- copy the generated documents -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources.version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/static/docs</outputDirectory>
							<resources>
								<resource>
									<directory>${asciidoctor.html.output.directory}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
	</build>

</project>
